[{"ratings": {"rAmountLearned": "3.19", "rDifficulty": "2.32", "rStimulateInterest": "2.03", "rRecommendMajor": "3.58", "rCourseQuality": "2.77", "rWorkRequired": "2.68", "rInstructorAccess": "2.43", "rReadingsValue": "2.18", "rRecommendNonMajor": "2.85", "rCommAbility": "1.90", "rInstructorQuality": "2.16"}, "section": {"name": "INTRO TO COMP PROG", "sectionnum": "001", "primary_alias": "CIS-110-001", "path": "/courses/25791/sections/001", "id": "25791-001", "aliases": ["CIS-110-001"]}, "comments": "This course introduces core concepts of computer programming and computing to those with no experience. Concepts and techniques covered include algorithms, objects, state, methods, data types, expressions, testing, debugging, data abstraction, iteration, and basic data structures. Java is used as the modern object-oriented programming language to teach students how to solve real-world problems computationally with an emphasis on data modeling and algorithmic thinking. The course covers fundamentals of object-oriented programming such as objects, classes, state, methods, loops, arrays, inheritance, and recursion using the Java programming language. This course is a general requirement for Computer Science majors. It counts as a Tech Elective or Computer Science Elective for other Engineering students and as a Formal Reasoning course for College students. There are no midterms and finals for the course \u2013 there are six tests spread out over the semester.\r\n\r\nThe students appear to have enjoyed the class greatly. They described to be \u201cdemanding, but fair,\u201d \u201cvery interesting and well constructed.\u201d Students generally agreed that the course \u201ccontains very useful material\u201d and that they \u201clearned a lot,\u201d especially because the course was \u201cvery hands on.\u201d The course was a \u201cgreat introduction to programming concepts\u201d and \u201cvery helpful and inclusive for a complete beginner.\u201d However, a few students felt that it was \u201chard to follow if you\u2019ve never programmed before and don\u2019t catch on right away.\u201d However, many students commented that even if it was tough at the beginning, it got easier once they \u201cgot the hang of it.\u201d Some of them mentioned that they were inspired to \u201cdelve deeper into other programming classes\u201d or decide to major or minor in computer science.\r\n\r\nThe general consensus was that the labs and the homework assignments were much more valuable and enjoyable than the lectures. \u201cThe labs were highly informative,\u201d one student said, \u201cand allowed practice of concepts learned in class to give a very good practical introduction to computer science.\u201d The lab section, said most students, was \u201cwhere the true learning happened.\u201d Lecture was \u201cmarginally useful for learning basics\u201d and \u201chelpful to see the process of writing code,\u201d but sometimes the students \u201ccouldn't really see the connection between the activities in class and what [they] were learning.\u201d Many students felt that lectures were downright useless, although one student explained that this maybe due to \u201cthe students' lack of willingness to come prepared to class.\u201d\r\n\r\nNevertheless, the majority of the students called for more labs to replace lecture. Some even called for \u201ca fully lab-based course.\u201d Several student commented on the \u201cpair programming\u201d policy of the labs; while some found it \u201cextremely beneficial,\u201d others felt \u201cworking individually [would have benefitted] more.\u201d\r\n\r\nAlthough some students felt that the six-test system was \u201cless stressful\u201d than the midterms-and-finals system, others found the tests \u201caggravating to the extreme.\u201d They felt that handwriting code in a short span of time was redundant and that \u201ctest performance did not really correlate with programming ability.\u201d They also complained about the harsh grading system. \u201c[If you] miss one line of code, [you] get 30 points off.\u201d However, there was a lot of praise for the review sessions held by the TAs and the TAs in general, who were \u201cvery helpful and knowledgeable.\u201d\r\n\r\nMost students loved Dr Griffin as a teacher. They felt she was \u201centhusiastic,\u201d \u201cunderstanding,\u201d and \u201calways willing to help;\u201d however, one student she wasn\u2019t \u201caccessible as an instructor.\u201d Almost everyone agreed that she was \u201cvery knowledgeable in computer science.\u201d There were various reactions to her teaching methods. Some students praised her demonstrations and attempts to make lectures interactive, while others commented on the \u201ccute\u201d examples she used with contempt. They felt like they were being treated \u201clike five year olds\u201d and felt that a \u201cmore serious \u2026 environment would be more conducive to learning the material.\u201d Some students also felt it was \u201cintimidating to participate [in her interactive games] in front of the whole class.\u201d\r\n\r\nAlthough most students had numerous complaints about the course, the general consensus appears to be that they more or less enjoyed it and learned a great deal from it. Students mentioned that \u201ca lot of time, thought and preparation went into the course [as obvious] from the homework assignments and lab sessions.\u201d Students learned \u201can entirely new way of thinking\u201d, and were able to \u201csharpen their problem solving skills.\u201d The course was highly recommended to everyone regardless of major. ", "num_students": 140, "path": "/courses/25791/sections/001/reviews/1353-JEAN-GRIFFIN", "instructor": {"path": "/instructors/1353-JEAN-GRIFFIN", "first_name": "JEAN", "last_name": "GRIFFIN", "id": "1353-JEAN-GRIFFIN", "name": "JEAN GRIFFIN"}, "num_reviewers": 135, "id": "25791-001-1353-JEAN-GRIFFIN"}]