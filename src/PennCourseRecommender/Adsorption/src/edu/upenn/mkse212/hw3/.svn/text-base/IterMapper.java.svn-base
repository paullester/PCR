package edu.upenn.mkse212.hw3;

import java.io.IOException;
import java.util.Arrays;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class IterMapper extends Mapper<LongWritable, Text, Text, Text> {
	public void map(LongWritable line, Text nodeRankPoints, Context context) {
		String s = nodeRankPoints.toString();
		String[] nRP = s.split("\t");
		String node = nRP[0].toString();
		String[] rP = nRP[1].toString().split(",");
		if (rP.length != 2) {
			return;
		}
		Double rank = Double.parseDouble(rP[0].toString());
		String[] points = rP[1].toString().split(" ");
		Double count = (double) points.length;
		Double retRank = rank/count;
		for (String p : points) {
			try {
				context.write(new Text(p), new Text(retRank.toString()));
			} catch (IOException e1) {
				e1.printStackTrace();
			} catch (InterruptedException e1) {
				e1.printStackTrace();
			}
		}
		try {
			context.write(new Text(node), new Text("list:" + rP[1].toString()));
		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}
