package edu.upenn.mkse212.hw3;

import java.io.IOException;
import java.util.HashMap;

import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class DiffReducer extends Reducer<Text, Text, Text, Text> {
	public void reduce(Text node, Iterable<Text> rank, Context context) {
		Double max = 0.0;
		HashMap<String, Double> map = new HashMap<String, Double>();
		for (Text t : rank) {
			String s = t.toString();
			String[] arr = s.split(" ");
			if (map.containsKey(arr[0])) {
				Double diff = Math.abs(Double.parseDouble(arr[1]) - map.get(arr[0]));
				if (diff > max) {
					max = diff;
				}
			} else {
				map.put(node.toString(), Double.parseDouble(t.toString()));
			}
		}
		try {
			context.write(new Text(node), new Text(max.toString()));
		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}
