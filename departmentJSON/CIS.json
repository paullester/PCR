HTTP/1.1 200 OK
http.status: 200
Date: Thu, 04 Dec 2014 03:48:24 +0000
Content-Length: 202745
Content-Type: application/json
Server: Jetty(8.1.13.v20130916)
Set-Cookie: BIGipServermule_pool_8091=3525579948.39711.0000; expires=Thu, 04-Dec-2014 09:48:24 GMT; path=/

{
  "result_data" : [ {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is a broad introduction to advanced issues in compilers and run-time systems for several classes of programming languages, including imperative, object-oriented, and functional. Particular attention is paid to the structures, analyses, and transformations used in program optimization.",
    "course_id" : "CIS 570",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "570",
    "course_title" : "Modern Programming Language Implementation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 500.  An undergraduate course in compiler construction (CSE 341 or equivalent) is helpful but not required.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course provides an introduction to fundamental concepts of distributed systems, and the design principles for building large scale computational systems. Topics covered include communication, concurrency, programming paradigms, naming, managing shared state, caching, synchronization, reaching agreement, fault tolerance, security, middleware, and distributed applications. This course is appropriate as an upper-level undergraduate CIS elective.",
    "course_id" : "CIS 505",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "505",
    "course_title" : "Software Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Undergraduate-level knowledge of Operating Systems and Networking, programming experience (CIT 594 or equivalent)",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course tightly integrates the theory and applications of discrete probability, discrete stochastic processes, and discrete statistical inference in the study of computer science. The course will introduce the Minimum Description Length Paradigm to unite basic ideas about randomness, inference and computation. Students will be expected to use the Maple programming environment in homework exercises which will include numerical and symbolic computations, simulations, and graphical displays.",
    "course_id" : "CIS 261",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "261",
    "course_title" : "Discrete Probability, Stochastic Processes, and Statistical Inference",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "02",
    "instructors" : "",
    "prerequisites" : "CIS 160 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course introduces the theory and practice of formal methods for the design and analysis of concurrent and embedded systems. The emphasis is on the underlying logical and automata-theoretic concepts, the algorithmic solutions, and heuristics to cope with the high computational complexity. Topics: Models and semantics of reactive systems; Verification algorithms; Verification techniques. Topics may vary depending on instructor.",
    "course_id" : "CIS 673",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "673",
    "course_title" : "Computer-Aided Verification",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Basic knowledge of algorithms, data structures, automata theory, propositional logic, operating systems, communication protocols, and hardware (CIS 262, CIS 380, or permission of the instructor).",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "MST",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "V",
    "course_credit_type" : "CU",
    "course_description" : "For students working on an advanced research leading to the completion of a Master's thesis.",
    "course_id" : "CIS 597",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "597",
    "course_title" : "Master's Thesis Research",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Review of regular and context-free languages and machine models. Turing machines and RAM models, Decidability, Halting problem, Reductions, Recursively enumerable sets, Universal TMs, Church/Turing thesis. Time and space complexity, hierarchy theorems, the complexity classes P, NP, PSPACE, L, NL, and co-NL. Reductions revisited, Cook-Levin Theorem, completeness, NL = co-NL. Advanced topics as time permits: Circuit complexity and parallel computation, randomized complexity, approximability, interaction and cryptography.",
    "course_id" : "CIS 511",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "511",
    "course_title" : "Theory of Computation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Discrete Mathematics, Automata theory or Algorithms at the undergraduate level.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "MST",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "For master's students who have taken ten course units and need only to complete the writing of a thesis or finish work for incompletes in order to graduate. CIS 990 carries full time status with zero course units and may be taken only once.",
    "course_id" : "CIS 990",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "990",
    "course_title" : "Masters Thesis",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Different topics selected each offering; e.g., NL generation, question-answering, information extraction, machine translation, restricted grammar formalisms, computational lexical semantics, etc.",
    "course_id" : "CIS 630",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "630",
    "course_title" : "Advanced Topics in Natural Language Processing",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 530 or equivalent or permission of instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is an introduction to set theory. It will begin with a study of Zermelo-Fraenkel set theory (ZF) as a partial description of the cumulative hierarchy of sets. Elementary properties of cardinal and ordinal numbers will be developed in ZF. The inner model of constructible sets will be used to establish the relative consistency of the axiom of choice and the generalized continuum hypothesis with ZF. The method of forcing will be introduced to establish the independence of the continuum hypothesis from ZF and other independence results. Large cardinals and their bearing on the resolution of questions about the continuum will be considered.",
    "course_id" : "CIS 572",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "572",
    "course_title" : "Set Theory",
    "crosslistings" : [ {
      "course_id" : "413",
      "section_id" : "",
      "subject" : "PHIL"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 297",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "297",
    "course_title" : "Study Abroad (Te)",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 313",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "313",
    "course_title" : "Comp Linear Algebra",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Discussion of problems and techniques in Artificial Intelligence (AI): Knowledge Representation, Natural Language Processing, Constraint Systems, Machine Learning; Applications of AI.",
    "course_id" : "CIS 620",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "620",
    "course_title" : "Advanced Topics in Artificial Intelligence",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 520 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 298",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "298",
    "course_title" : "Study Abroad",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The goals of this course are twofold: (1) to take good programmers and turn them into excellent ones, and (2) to introduce them to a range of modern software engineering practices, in particular those embodied in advanced functional programming languages.",
    "course_id" : "CIS 552",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "552",
    "course_title" : "Advanced Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Four courses involving significant programming and a discrete mathematics or modern algebra course.  Enrollment by permission of the instructor only.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "One time course offerings of special interest. Equivalent to a CIS 5XX level course.",
    "course_id" : "CIS 700",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "700",
    "course_title" : "Special Topics",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "LAB",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will provide basic technical exposure to computers and the World Wide Web; investigate the current and future political and economic impact of information technology on individuals and on society, focusing on issues of intellectual property, personal privacy and cybercommunity; and prepare students for further self study dealing with information technology and introductory programming. A weekly recitation/lab will focus on computer fluency, including simple web design. Open to all non-SEAS students. SEAS students my not take for credit toward engineering degree. Pre-requisite: None.",
    "course_id" : "CIS 100",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "100",
    "course_title" : "Information Technology and Its Impact on Society",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "01",
    "register_subgroup_two" : "01",
    "requirements_met" : [ ],
    "scheduling_priority" : "A",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "LAB",
      "credit" : "0"
    } ],
    "corequisites" : "Math 104 or Math 150",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is an introduction to the basic principles and great ideas of computer science intended for non-engineering students. It covers some of the essential topics of contemporary computer science from a mathematical perspective. No programming experience necessary. Open to all non-SEAS students. SEAS students may not take for credit toward their engineering degree.",
    "course_id" : "CIS 101",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "This counts as a Formal Reasoning course for College students.",
    "course_number" : "101",
    "course_title" : "Introduction to Computer Science",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 123",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "123",
    "course_title" : "Programming with C",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "IND",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "An opportunity for the student to become closely associated with a professor (1) in a research effort to develop research skills and techniques and/or (2) to develop a program of independent in-depth study in a subject area in which the professor and student have a common interest. The challenge of the task undertaken must be consistent with the student's academic level. To register for this course, the student must submit a detailed proposal, signed by the independent study supervisor, to the SEAS Office of Academic Programs (111 Towne) no later than the end of the \"add\" period.",
    "course_id" : "CIS 099",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "A maximum of 2 c.u. of CIS 099 may be applied toward the B.A.S. or B.S.E. degree requirements.",
    "course_number" : "099",
    "course_title" : "Undergraduate Research/Independent Study",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "06",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "A",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "IND",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "V",
    "course_credit_type" : "CU",
    "course_description" : "For students pursuing advanced research to fulfill PhD dissertation requirements.",
    "course_id" : "CIS 999",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "999",
    "course_title" : "Thesis/Dissertation Research",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is an automatic summarization that can help alleviate the information overload problem caused by the unprecedented amount of online textual information. The building of a summarization system requires good understanding of the properties of human language and the use of various natural language tools. In this course we will build several summarization systems of increasing complexity and sophistication. In the process we will learn about various natural language processing tools and resources such as part of speech tagging, chunking, parsing, Wordnet, and machine learning toolkits. We will also cover probability and statistics concepts used in summarization, but also applicable to a wide range of other language-related tasks.",
    "course_id" : "CIS 430",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "430",
    "course_title" : "Introduction to Human Language Technology",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 121",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LAB",
      "credit" : ".5"
    } ],
    "corequisites" : "CSE 371",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Laboratory for CSE 371. In this laboratory section, students gain experience with digital design techniques by designing and implementing actual circuits using Verilog HDL and FPGAs. Five assignments culminate in the design and simulation of a complete 16-bit integer pipelined CPU.",
    "course_id" : "CIS 372",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "372",
    "course_title" : "Computer Organization and Design Lab",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "A thorough introduction to computer graphics techniques, covering primarily 3D modeling and image synthesis. Topics cover: geometric transformations, geometric algorithms, software systems (OpenGL), 3D object models (surface and volume), visible surface algorithms, image synthesis, shading and mapping, ray tracing, radiosity, global illumination, photon mapping, anti-aliasing and compositing.",
    "course_id" : "CIS 460",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "460",
    "course_title" : "Computer Graphics",
    "crosslistings" : [ {
      "course_id" : "560",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "One year programming experience (C, JAVA, C++)",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The goal of this course is to provide an opportunity for seniors to define, desand execute a project of your own choosing that demonstrates the technical skiland abilities that you have acquired during your 4 years as undergraduates. Evaluation is based on selecting an interesting topic, completing appropriate research on the state of the art in that area, communicating your objectives i writing and in presentations, accurately estimating what resources will be reqto complete your chosen task, coding necessary functionality, and executing your plan.",
    "course_id" : "CIS 497",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "497",
    "course_title" : "DMD Senior Project",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Senior Standing or Permission of the Instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Achieving mastery in a new programming language requires more than just learning a new syntax; rather, different languages support different ways to think about solving problems. Not all programming languages are inherently procedural or object-oriented. The intent of this course is to provide a basic understanding of a wide variety of programming paradigms, such as logic programming, functional programming, concurrent programming, rule-based programming, and others.",
    "course_id" : "CIS 554",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "554",
    "course_title" : "Programming Paradigms",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 121 or CIT 594 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Google translate can instantly translate between any pair of over fifty human languages (for instance, from French to English). How does it do that? Why does it make the errors that it does? And how can you build something better? Modern translation systems like Google Translate and Bing Translator learn how to translate by reading millions of words of already translated text, and this course will show you how they work. The course covers a diverse set of fundamental building blocks from linguistics, machine learning, algorithms, data structures , and formal language theory, along with their application to a real and difficult problem in artificial intelligence.",
    "course_id" : "CIS 526",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "526",
    "course_title" : "Machine Translation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course explores questions fundamental to computer science such as which problems cannot be solved by computers, can we formalize computing as a mathematical concept without relying upon the specifics of programming languages and computing platforms, and which problems can be solved efficiently. The topics include finite automata and regular languages, context-free grammars and pushdown automata, Turing machines and undecidability, tractability and NP-completeness. The course emphasizes rigorous mathematical reasoning as well as connections to practical computing problems such as test processing, parsing, XML query languages, and program verification.",
    "course_id" : "CIS 262",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "262",
    "course_title" : "Automata, Computability, and Complexity",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 160",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 197",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "197",
    "course_title" : "Javascript",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will focus on research topics in computer architecture, and include reading and presenting research papers and an optional project. The content will differ with each offering, covering topics such as multicore programmability, datacenter and warehouse-scale computing, security, energy-efficient architectures, etc.",
    "course_id" : "CIS 601",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "601",
    "course_title" : "Advanced Topics in Computer Architecture",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 501 or strong performance in CIS 371",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course covers the fundamentals of advanced quantitative image analysis that apply to all of the major and emerging modalities in biological/biomaterials imaging and in vivo biomedical imaging. While traditional image processing techniques will be discussed to provide context, the emphasis will be on cutting edge aspects of all areas of image analysis (including registration, segmentation, and high-dimensional statistical analysis). Significant coverage of state-of-the-art biomedical research and clinical applications will be incorporated to reinforce the theoretical basis of the analysis methods.",
    "course_id" : "CIS 537",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "537",
    "course_title" : "Biomedical Image Analysis",
    "crosslistings" : [ {
      "course_id" : "537",
      "section_id" : "",
      "subject" : "BE"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Mathematics through multivariate calculus (Math 241), programming experience, as well as some familiarity with linear algebra, basic physics, and statistics.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is focused on principles underlying design and analysis of computational elements that interact with the physical environment. Increasingly, such embedded computers are everywhere, from smart cameras to medical devices to automobiles. While the classical theory of computation focuses on the function that a program computes, to understand embedded computation, we need to focus on the reactive nature of the interaction of a component with its environment via inputs and outputs, the continuous dynamics of the physical world, different ways of communication among components, and requirements concerning safety, timeliness, stability, and performance. Developing tools for approaching design, analysis, and implementation of embedded systems in a principled manner is an active research area. This course will attempt to give students a coherent introduction to this emerging area. This course is appropriate as an upper-level undergraduate CIS elective.",
    "course_id" : "CIS 540",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "540",
    "course_title" : "Principles of Embedded Computation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "This course assumes mathematical maturity, commensurate with either ESE 210 (Introduction to Dynamical Systems), or CIS 262 (Introduction to Theory of Computation).  It is suitable for students who have an undergraduate degree in computer science, or computer engineering, or electrical engineering.  It is also suitable for Penn undergraduates in CIS or CE as an upper-level elective.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This is an introductory course to Computer Vision and Computational Photography. This course will explore three topics: 1) image morphing, 2) image matching and stitching, and 3) image recognition. This course is intended to provide a hands-on experience with interesting things to do on images/videos. The world is becoming image-centric. Cameras are now found everywhere, in our cell phones, automobiles, even in medical surgery tools. Computer vision technology has led to latest innovations in areas such as Hollywood movie production, medical diagnosis, biometrics, and digital library. This course is suited for students from all Engineering backgrounds, who have the basic knowledge of linear algebra and programming, and a lot of imagination.",
    "course_id" : "CIS 581",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "581",
    "course_title" : "Computer Vision & Computational Photography",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Discussion of special research topics.",
    "course_id" : "CIS 635",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "635",
    "course_title" : "Advanced Computational Biology",
    "crosslistings" : [ {
      "course_id" : "537",
      "section_id" : "",
      "subject" : "BIOL"
    }, {
      "course_id" : "537",
      "section_id" : "",
      "subject" : "GCB"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Biol 536 or permission of the instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course covers various aspects of discrete algorithms. Graph-theoretic algorithms in computational biology, and randomization and computation; literature in dynamic graph algorithms, approximation algorithms, and other areas according to student interests.",
    "course_id" : "CIS 677",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "677",
    "course_title" : "Advanced Topics in Algorithms and Complexity",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Consent of the instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Graduate seminar in advanced work on machine perception as it applies to robots as well as to the modeling of human perception. Topics vary with each offering.",
    "course_id" : "CIS 680",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "A previous course in machine perception or knowledge of image processing, experience with an operating system and language such as Unix and C, and aptitude for mathematics.",
    "course_number" : "680",
    "course_title" : "Advanced Topics in Machine Perception",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "A previous course in machine perception or knowledge of image processing, experience with an operating system and language such as Unix and C, and aptitude for mathematics.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The course studies issues in nonlinear control theory, with a particular emphasis on the use of geometric principles. Topics include: controllability, accessibility, and observability, for nonlinear systems; Forbenius' theorem; feedback and input/outpub linearization for SISO and MIMO systems; dynamic extension; zero dynamics; output tracking and regulation; model matching disturbance decoupling; examples will be taken from mechanical systems, robotic systems, including those involving nonholonomic constraints, and active control of vibrations.",
    "course_id" : "CIS 613",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "613",
    "course_title" : "Nonlinear Control Theory",
    "crosslistings" : [ {
      "course_id" : "617",
      "section_id" : "",
      "subject" : "ESE"
    }, {
      "course_id" : "613",
      "section_id" : "",
      "subject" : "MEAM"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "A sufficient background to linear algebra (ENM 510/511 or equivalent) and a course in linear control theory (MEAM 513 or equivalent), or written permission of the instructor.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course introduces students to common physically based simulation techniques for animation of fluids and gases, rigid and deformable solids, cloth, explosions, fire, smoke, virtual characters, and other systems. Physically based simulation techniques allow for creation of extremely realistic special effects for movies, video games and surgical simulation systems. We will learn state-of-the-art techniques that are commonly used in current special effects and animation studios and in video games community. To gain hands-on experience, students will implement basic simulators for several systems. The topics will include: Particle Systems, Mass spring systems, Deformable Solids & Fracture, Cloth, Explosions & Fire, Smoke, Fluids, Deformable active characters, Simulation and control of rigid bodies, Rigid body dynamics, Collision detection and handling, Simulation of articulated characters, Simulated characters in games. The course is appropriate for both upper level undergraduate and graduate students.",
    "course_id" : "CIS 563",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "563",
    "course_title" : "Physically Based Animation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Students should have a good knowledge of object-oriented programming (C++) and basic familiarity with linear algebra and physics.  Some background in computer graphics is helpful.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Computational problems in molecular biology, including sequence search and analysis, informatics, phylogenetic reconstruction, genetic mapping and optimization.",
    "course_id" : "CIS 536",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "536",
    "course_title" : "Computational Biology",
    "crosslistings" : [ {
      "course_id" : "536",
      "section_id" : "",
      "subject" : "BIOL"
    }, {
      "course_id" : "536",
      "section_id" : "",
      "subject" : "GCB"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Math 104/114 or equivalent, BIOL 221 or equivalent, or permission of the instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Enrollment for students participating in Teaching Practicum.",
    "course_id" : "CIS 895",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "895",
    "course_title" : "Teaching Practicum",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course explores techniques for writing correct and efficient embedded code. Topics include C/C++ idioms, data abstraction, elementary data structures and algorithms, environment modeling, concurrency, hard real time, and modular program reasoning.",
    "course_id" : "CIS 542",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "542",
    "course_title" : "Embedded Systems Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "C fluency",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The course covers the basic theory of recursive and recursively enumerable sets and the connection between this theory and a variety of decision problems of interest in a computational setting. The course will then proceed to an exposition of recursion theoretic reducibilities. Elementary results about degrees of unsolvability are established. The theory of arithmetical, analytical, and projective hierarchies will be presented. The study of functionals at this point will provide an entry into the computationally important subject of recursion at higher types. Basic parts of the theory of inductive definitions and monotone operators will be presented. If time and interest permit, this theory will be applied to the analysis of the semantical paradoxes. The course will conclude with an investigation of the lower levels of the analytical and projective hierarchies. Applications to the degrees of unsolvability of various logical systems will be presented, connections between the hierarchies and predicative formal systems will be established, and the relation between the theory of the projective hierarchy and topics in classical descriptive set theory will be indicated.",
    "course_id" : "CIS 571",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "571",
    "course_title" : "Recursion Theory",
    "crosslistings" : [ {
      "course_id" : "411",
      "section_id" : "",
      "subject" : "PHIL"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course introduces basic concepts and techniques in the foundational study of programming languages. The central theme is the view of programs and programming languages as mathematical objects for which precise claims may be made and proved. Particular topics include operational techniques for formal definition of language features, type systems and type safety properties, polymorphism, constructive logic, and the Coq proof assistant. This course is appropriate as an upper-level undergraduate CIS elective. Undergraduates who have satisfied the prerequisites are welcome to enroll. No permission from the instructor is needed.",
    "course_id" : "CIS 500",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "500",
    "course_title" : "Software Foundations",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 121, 160, and 262 (or equivalents); plus substantial mathematical maturity (at least two additional undergraduate courses in math or theoretical CS). Undergraduate-level coursework in programming languages, compilers, functional programming, or logic is helpful but not required.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course examines the recent development of corpus-based techniques in natural language processing, focusing on both statistical and primarily symbolic learning techniques. Particular topics vary from year to year.",
    "course_id" : "CIS 639",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "639",
    "course_title" : "Statistical approaches to Natural Language Understanding",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Advanced topics in databases: distributed databases, integrity constraints, failure, concurrency control, relevant relational theory, semantics of data models, the interface between programming of languages and databases. Object-oriented databases. New topics are discussed each year.",
    "course_id" : "CIS 650",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "650",
    "course_title" : "Advanced Topics in Databases",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 550",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "LAB",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will provide an introduction to computation and data analysis using MATLAB - an industry standard programming and visualization environment. The course will cover the fundamentals of computing including; variables, functions, flow control, iteration and recursion. These concepts will be illustrated through examples and assignments which show how computing is applied to various scientific and engineering problems. Examples will be drawn from the simulation of physical and chemical systems, the analysis of experimental data, Monte Carlo numerical experiments, image and audio processing, and control of sensors and actuators. This course does not assume any prior programming experience but will make use of basic concepts from calculus and Newtonian physics.",
    "course_id" : "CIS 105",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "105",
    "course_title" : "Introduction to Scientific Computing",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Have you ever wondered why sharing music and video generates such political and legal controversies? Is information on your PC safe and should law enforcement be able to access information you enter on the Web? Will new devices allow tracking of your every move and every purchase? CIS 125 is focused on developing an understanding of existing and emerging technologies, along with the political, societal and economic impacts of those technologies. The technologies are spread across a number of engineering areas and each of them raise issues that are of current concern or are likely to be a future issue.",
    "course_id" : "CIS 125",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "125",
    "course_title" : "Technology and Policy",
    "crosslistings" : [ {
      "course_id" : "125",
      "section_id" : "",
      "subject" : "EAS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Introduction to the theory and practice of data management systems, including databases and data integration. The Entity-Relationship approach as a modeling tool. The relational model, algebra and calculus. Database design and relational normalization. Views and their role in security and integration. Physical data organization and indexing structures. Query execution and optimization. Updates and integrity: transaction management, concurrency control and recovery techniques. XML and database-backed Web sites.",
    "course_id" : "CIS 550",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "550",
    "course_title" : "Database and Information Systems",
    "crosslistings" : [ {
      "course_id" : "450",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIT 594 and CIT 592 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "DIS",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "For Ph.D. candidates working exclusively on their dissertation research, having completed enrollment for a total of ten semesters (fall and spring). There is no credit or grade for CIS 995.",
    "course_id" : "CIS 995",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "995",
    "course_title" : "Dissertation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how \"cloud computing\" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Googe-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course you will learn about some aspects of large-scale software development assimilating large APIs, thinking about modularity, reading other people's code, managing versions, debugging, etc.",
    "course_id" : "CIS 555",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "555",
    "course_title" : "Internet and Web Systems",
    "crosslistings" : [ {
      "course_id" : "455",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Familiarity with threads and concurrency, strong Java programming skills.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Different topics selected for each course offering.",
    "course_id" : "CIS 640",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "640",
    "course_title" : "Advanced Topics in Software Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 505 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "A graduate course intended to introduce the use of signal and image processing tools for analyzing and modeling biological systems. We present a series of fundamental examples drawn from areas of speech analysis/synthesis, computer vision, and modeling of biological perceptual systems. Students learn the material through lectures and via a set of computer exercises developed in MATLAB.",
    "course_id" : "CIS 558",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "558",
    "course_title" : "Computer Analysis and Modeling of Biological Signals and Systems",
    "crosslistings" : [ {
      "course_id" : "525",
      "section_id" : "",
      "subject" : "LING"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Undergraduate-level knowledge of linear algebra",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "An investigation of paradigms for design and analysis of algorithms. The course will include dynamic programming, flows and combinatorial optimization algorithms, linear programming, randomization and a brief introduction to intractability and approximation algorithms. The course will include other advanced topics, time permitting.",
    "course_id" : "CIS 502",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "502",
    "course_title" : "Analysis of Algorithms",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIT 594 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The course is about mathematical and algorithmic techniques used for geometric modeling and geometric design, using curves and surfaces. There are many applications in computer graphics as well as in robotics, vision, and computational geometry. Such techniques are used in 2D and 3D drawing and plot, object silhouettes, animating positions, product design (cars, planes, buildings), topographic data, medical imagery, active surfaces of proteins, attribute maps (color, texture, roughness), weather data, art, etc. Three broad classes of problems will be considered: approximating curved shapes, using smooth curves or surfaces. Interpolating curved shapes, using smooth curves or surfaces. Rendering smooth curves or surfaces.",
    "course_id" : "CIS 510",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "510",
    "course_title" : "Curves and Surfaces: Theory and Applications",
    "crosslistings" : [ {
      "course_id" : "410",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Basic knowledge of linear algebra, calculus, and elementary geometry.  CIS 560 is not required.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Computational approaches to the problem of understanding and producing natural language text and speech, including speech processing, syntactic parsing, semantic interpretation, discourse meaning, and the role of pragmatics and world knowledge. The course will examine both rule-based and corpus-based techniques. It is recommended that students have some knowledge of logic, basic linguistics, and/or programming.",
    "course_id" : "CIS 530",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "530",
    "course_title" : "Computational Linguistics",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This project-based course is designed to provide a comprehensive introduction to the application of computer graphics in a laboratory setting. Course materials and labs will facilitate understanding issues and trends in 3D computer graphics. Students will develop a facility with fundamental 3-D modelsand modeling software through a series of projects. The course will offer students a technical understanding of Polygonal and Spline based modeling, alternative and standard methods of 3-D model import and export, and model conversion. It will also cover procedural and scripting methods, techniques, and conventions for creating models and shaders that will function properly forrendering and animation. Practical application of topics covered in CIS 460/CIS560 include: geometric transformations, hierarchies, articulation, modeling, blend shapes, vertex weighting, and animation. Experiments with various animation methods include: dynamics, forward and inverse kinematics, surface deformations, keyframe interpolation, motion capture, procedural animation, andfacial animation. The course will be laboratory based and will use industry standard software.",
    "course_id" : "CIS 561",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "561",
    "course_title" : "Computer Modeling and Animation Applications",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 120, 121 or equivalent experience and concurrent or past enrollment in CIS 460/CIS 560",
    "register_subgroup_one" : "02",
    "register_subgroup_two" : "01",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "IND",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "V",
    "course_credit_type" : "CU",
    "course_description" : "For master's students studying a specific advanced subject area in computer and information science. Involves coursework and class presentations. A CIS 599 course unit will invariably include formally gradable work comparable to that in a CIS 500-level course. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc.",
    "course_id" : "CIS 599",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "599",
    "course_title" : "Independent Study for Masters Students",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will examine the expressive power of various logical languages over the class of finite structures. The course begins with an exposition of some of the fundamental theorems about the behavior of first-order logic in the context of finite structures, in particular, the Ehrenfeucht-Fraisse Theorem and the Trahktenbrot Theorem. The first of these results is used to show limitations on the expressive power of first-order logic over finite structures while the second result demonstrates that the problem of reasoning about finite structures using first-order logic is surprisingly complex. The course then proceeds to consider various extensions of first-order logic including fixed-point operators, generalized quantifiers, infinitary languages, and higher-order languages. The expressive power of these extensions will be studied in detail and will be connected to various problems in the theory of computational complexity. This last motif, namely the relation between descriptive and computational complexity, will be one of the main themes of the course.",
    "course_id" : "CIS 518",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "518",
    "course_title" : "Topics in Logic; Finite Model Theory and Descriptive Complexity",
    "crosslistings" : [ {
      "course_id" : "571",
      "section_id" : "",
      "subject" : "MATH"
    }, {
      "course_id" : "412",
      "section_id" : "",
      "subject" : "PHIL"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "J",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course examines the architecture and capabilities of modern GPUs. The graphics processing unit (GPU) has grown in power over recent years, to the point where many computations can be performed faster on the GPU than on a traditional CPU. GPUs have also become programmable, allowing them to be used for a diverse set of applications far removed from traditional graphics settings. Topics covered include architectural aspects of modern GPUs, with a special focus on their streaming parallel nature, writing programs on the GPU using high level languages like Cg and BrookGPU, and using the GPU for graphicsand general purpose applications in the area of geometry modelling, physical simulation, scientific computing and games. Students are expected to have a basic understanding of computer architecture and graphics, and should be proficient in OpenGL and C/C++.",
    "course_id" : "CIS 665",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "665",
    "course_title" : "GPU Programming and Architecture",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 460 or CIS 560, and familiarity with computer hardware/systems.  The hardware/systems requirement may be met by CIS 501; or CIT 593 and 595; or CIS 240 (with CIS 371 recommended); or equivalent coursework.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Basic notions of first-order logic, with an emphasis on the algorithmic aspect of the completeness theorem and proof systems. The course includes Gentzen's systems and the main theorems of first-order logic including completeness, compactness, and the existence of models.",
    "course_id" : "CIS 516",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "516",
    "course_title" : "Basic Logic for Computer Science",
    "crosslistings" : [ {
      "course_id" : "670",
      "section_id" : "",
      "subject" : "MATH"
    }, {
      "course_id" : "506",
      "section_id" : "",
      "subject" : "PHIL"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "02",
    "register_subgroup_two" : "01",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "LAB",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The course covers methods used in computational biology, including the statistical models and algorithms used and the biological problems which they address. Students will learn how tools such as BLAST work, and will use them to address real problems. The course will focus on sequence analysis problems such as exon, motif and gene finding, and on comparative methods but will also cover gene expression and proteomics.",
    "course_id" : "CIS 535",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "535",
    "course_title" : "Introduction to Bioinformatics",
    "crosslistings" : [ {
      "course_id" : "535",
      "section_id" : "",
      "subject" : "BIOL"
    }, {
      "course_id" : "535",
      "section_id" : "",
      "subject" : "GCB"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course provides firm foundations in linear algebra and basic optimization techniques. Emphasis is placed on teaching methods and tools that are widely used in various areas of computer science. Both theoretical and algorithmic aspects will be discussed.",
    "course_id" : "CIS 515",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "515",
    "course_title" : "Fundamentals of Linear Algebra and Optimization",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Undergraduate course in linear algebra, calculus",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The use of logical formalisms in Computer Science is dominated by a fundamental conflict: expressiveness vs. algorithmic tractability. Database constraint logics, temporal logics and description logics are successful compromises in this conflict: (1) they are expressive enough for practical specifications in certain areas, and (2) there exist interesting algorithms for the automated use of these specifications. Interesting connections can be made between these logics because temporal and description logics are modal logics, which in turn can be seen, as can database constraint logics, as certain fragments of first-order logic. These connections might benefit research in databases, computer-aided verification and AI. Discussion includes other interesting connections, eg., with SLD-resolution, with constraint satisfaction problems, with finite model theory and with automata theory.",
    "course_id" : "CIS 682",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "682",
    "course_title" : "Friendly Logics",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The intent of the course is to provide students with a solid theoretical understanding of the core creative principles, concepts, and game play structures/schemas underlying most game designs. The course also will examine game development from an engineering point of view, including: game play mechanics, game engine software and hardware architectures, user interfaces, design documents, playtesting and production methods.",
    "course_id" : "CIS 564",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "564",
    "course_title" : "Game Design and Development",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "Basic understanding of 3D graphics and animation principles, prior exposure to scripting and programming languages such as Python, C and C++.",
    "prerequisites" : "Basic understanding of 3D graphics and animation principles, prior exposure to scripting and programming languages such as Python, C and C++",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Writing a \"program\" is easy. Developing a \"software product\", however, introduces numerous challenges that make it a much more difficult task. This course will look at how professional software engineers address those challenges, by investigating best practices from industry and emerging trends in software engineering research. Topics will focus on software maintenance issues, including: test case generation and test suite adequacy; code analysis verification and model checking; debugging and fault localization; refactoring and regression testing; and software design and quality.",
    "course_id" : "CIS 573",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "573",
    "course_title" : "Software Engineering",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIT 591 and 593, or CIS 120, 121, and 240, or equivalent; proficiency in Java",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is a pragmatic examination of multicore programming and the hardware architecture of modern multicore processors. Unlike the sequential single-core processors of the past, utilizing a multicore processor requires programmers to identify parallelism and write explicitly parallel code. Topics covered include: the relevant architectural trends and aspects of multicores, approaches for writing multicore software by extracting data parallelism (vectors and SIMD), thread-level parallelism, and task-based parallelism, efficient synchronization, and program profiling and performance tuning. The course focuses primarily on mainstream shared-memory multicores with some coverage of graphics processing units (GPUs). Cluster-based supercomputing is not a focus of this course. Several programming assignments and a course project will provide students first-hand experience with programming, experimentally analyzing, and tuning multicore software. Students are expected to have a solid understanding of computer architecture and strong programming skills (including experience with C/C++).",
    "course_id" : "CIS 534",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "534",
    "course_title" : "Multicore Programming and Architecture",
    "crosslistings" : [ {
      "course_id" : "434",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 371 or CIS 501, and significant programming experience",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "CIS 564",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The objective of the game design practicum is to provide students with hands on experience designing and developing 3D computer games. Working in teams of three or four, students will brainstorm an original game concept, write a formal game design document then develop a fully functional prototype consisting of a playable level of the game. In addition to creation of original art and animation assets for the game, technical features to be designed and implemented include a nove l game mechanic and/or user interaction model, game physics (i.e. particle systems and rigid body dynamics), character animation, game AI (i.e. movement control, path planning, decision making, etc.), sound effects and effects and background music, 2D graphical user interface (GUI) design and optional multiplayer networking capabilities. Consistent with standard industry practices, game code and logic will be written using C++ and popular scripting languages such as Python and Lua. State-of-the-art game and physics engine middleware also will be used to expose students to commercial-grade software, production methodologies and art asset pipelines. As a result of their game development efforts, students will learn first hand about the creative process, design documentation, object-oriented software design and engineering, project management (including effective team collaboration and communication techniques), design iteration through user feedback and play-testing, and most importantly, what makes a game fun to play.",
    "course_id" : "CIS 568",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "568",
    "course_title" : "Game Design Practicum",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 462/562, CIS 277 or CIS 460/560",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "A thorough introduction to computer graphics techniques, covering primarily 3D modeling and image synthesis. Topics cover: geometric transformations, geometric algorithms, software systems (OpenGL), 3D object models (surface and volume), visible surface algorithms, image synthesis, shading and mapping, ray tracing, radiosity, global illumination, photon mapping, anti-aliasing and compositing.",
    "course_id" : "CIS 560",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "560",
    "course_title" : "Computer Graphics",
    "crosslistings" : [ {
      "course_id" : "460",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "One year programming experience (C, JAVA, C++)",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Modern AI uses a collection of techniques from a number of fields in the design of intelligent systems: probability, statistics, logic, operations research, optimal control and economics, to name a few. This course covers basic modeling and algorithmic tools from these fields underlying current research and highlights their applications in computer vision, robotics, and natural language processing.",
    "course_id" : "CIS 521",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "521",
    "course_title" : "Fundamentals of AI",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Students are expected to have the following background: Basic algorithms, data structures and complexity (dynamic programming, queues, stacks, graphs, big-O, P/NP); Basic probability and statistics (random variables, standard distributions, simple regression); Basic linear algebra (matrices, vectors, norms, inverses); Reasonable programming skills.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The purpose of this course is to present some of the advanced geometric methods used in geometric modeling, computer graphics, computer vision, etc. The topics may vary from year to year, and will be selected among the following subjects (nonexhaustive list): Introduction to projective geometry with applications to rational curves and surfaces, control points for rational curves, rectangular and triangular rational patches, drawing closed rational curves and surfaces; Differential geometry of curves (curvature, torsion, osculating planes, the Frenet frame, osculating circles, osculating spheres); Differential geometry of surfaces (first fundamental form, normal curvature, second fundamental form, geodesic curvature, Christoffel symbols, principal curvatures, Gaussian curvature, mean curvature, the Gauss map and its derivative dN, the Dupin indicatrix, the Theorema Egregium equations of Codazzi-Mainadi, Bonnet's theorem, lines of curvatures, geodesic torsion, asymptotic lines, geodesic lines, local Gauss-Bonnet theorem).",
    "course_id" : "CIS 610",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "610",
    "course_title" : "Advanced Geometric Methods in Computer Science",
    "crosslistings" : [ {
      "course_id" : "676",
      "section_id" : "",
      "subject" : "MATH"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 510 or coverage of equivalent material",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course covers core subject matter common to the fields of robotics, character animation and embodied intelligent agents. The intent of the course is to provide the student with a solid technical foundation for developing, animating and controlling articulated systems used in interactive computer games, virtual reality simulations and high-end animation applications. The course balances theory with practice by \"looking under the hood\" of current animation systems and authoring tools and exams the technologies and techniques used from both a computer science and engineering perspective. Topics covered include: geometric coordinate systems and transformations; quaternions; parametric curves and surfaces; forward and inverse kinematics; dynamic systems and control; computer simulation; keyframe, motion capture and procedural animation; behavior-based animation and control; facial animation; smart characters and intelligent agents.",
    "course_id" : "CIS 562",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "562",
    "course_title" : "Computer Animation",
    "crosslistings" : [ {
      "course_id" : "462",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Previous exposure to major concepts in linear algebra (i.e. vector matrix math), curves and surfaces, dynamical systems (e.g.  2nd order mass-spring-damper systems) and 3D computer graphics has also been assumed in the preparation of the course materials.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "IND",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "V",
    "course_credit_type" : "CU",
    "course_description" : "For doctoral students studying a specific advanced subject area in computer and information science. The Independen t Study may involve coursework, presentations, and formally gradable work comparable to that in a CIS 500 or 600 level course. The Independent Study may also be used by doctoral students to explore research options with faculty, prior to determining a thesis topic. Students should discuss with the faculty supervisor the scope of the Independent Study, expectations, work involved, etc. The Independent Study should not be used for ongoing research towards a thesis, for which the CIS 999 designation should be used.",
    "course_id" : "CIS 899",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "899",
    "course_title" : "Doctoral Independent Study",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 194",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "194",
    "course_title" : "Haskell",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The details of this course change from year to year, but its purpose is to cover theoretical topics related to programming languages. Some central topics include: denotational vs operational semantics, domain theory and category theory, the lambda calculus, type theory (including recursive types, generics, type inference and modules), logics of programs and associated completeness and decidability problems, specification languages, and models of concurrency. The course requires a degree of mathematical sophistication.",
    "course_id" : "CIS 670",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "670",
    "course_title" : "Advanced Topics in Programming Languages",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 500",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The goal of the course is to review state-of-the art research in the fields of computer graphics and animation as well as provide students with working knowledge of how to convert theory to practice by developing an associated graphics/animation authoring tool. The course is comprised of primers, lectures, student presentations and the authoring tool group project. Each student will be responsible for presenting one primer and at least two SIGGRAPH papers to the class. Working in teams of two, students will design and develop an authoring tool that that facilitates the creation of a new type of user interaction, animation/simulation capability or 3D graphics special effect. Research papers published in the SigGraph Conference proceedings will provide the basis for the features/functionality/special effects that can be selected for implementation in the authoring tool. Each group will analyze the need and user requirements for the tool they plan to develop, prepare a formal software design document, construct a project work plan, develop the authoring tool functionality and user interface, test the design and demonstratthe authoring of associated content. A plug-in to standard authoring tools such as Maya or Houdini must also be developed to enable importing of appropriate assets and/or exporting of results.",
    "course_id" : "CIS 660",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "660",
    "course_title" : "Advanced Topics in Computer Graphics and Animation",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 560 or permission of the instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "How do you optimally encode a text file? How do you find shortest paths in a map? How do you desgin a communication network? How do you route data in a network? What are the limits of efficient computation? This course gives a comprehensive introduction to design and analysis of algorithms, and answers along the way to these and many other interesting computational questions. You will learn about problem-solving; advanced data structures such as universal hashing and red-black trees; advanced design and analysis techniques such as dynamic programming and amortized analysis; graph algorithms such as minimum spanning trees and network flos; NP-completeness theory; and approximation algorithms.",
    "course_id" : "CIS 320",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "320",
    "course_title" : "Introduction to Algorithms",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 120, 121, 160, 262",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course provides an introduction to fundamental concepts in the design and implementation of networked systems, their protocols, and applications. Topics to be covered include: Internet architecture, network applications, addressing, routing, transport protocols, network security, and peer-to-peer networks. The course will involve written assignments, examinations, and programming assignments.. Students will work in teams to design and implement networked systems in layers, from routing protocols, transport protocols, to peer-to-peer networks.",
    "course_id" : "CIS 553",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "553",
    "course_title" : "Networked Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 121 or equivalent, or permission of the instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "How does Google find what you're looking for... and exactly how do they make money doing so? What properties might we expect any social network (such as the Penn Facebook) to reliably have, and are there \"simple\" explanations for them? How does your position in a social or economic network (dis)advantage you, and why? What might we mean by the economics of spam? What do game theory and the Paris subway have to do with Internet routing? Networked Life looks at how our world is connected -- socially, economically, strategically and technologically -- and why it matters.",
    "course_id" : "CIS 112",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "112",
    "course_title" : "Networked Life",
    "crosslistings" : [ {
      "course_id" : "112",
      "section_id" : "",
      "subject" : "PPE"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course covers the foundations of statistical machine learning. The focus is on probabilistic and statistical methods for prediction and clustering in high dimensions. Topics covered include SVMs and logistic regression, PCA and dimensionality reduction, and EM and Hidden Markov Models.",
    "course_id" : "CIS 520",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "520",
    "course_title" : "Machine Learning",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Elementary probability, calculus, and linear algebra.  Basic programming experience",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "CIS 120",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.",
    "course_id" : "CIS 160",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "160",
    "course_title" : "Mathematical Foundations of Computer Science",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will provide an introduction to programming in C++ and is intended for students who already have some exposure to programming in another language such as Java, C++ provides the programmer with a greater level of control over machine resources and are commonly used in situations where low level access or performance are important. This course will illuminate the issues associated with programming at this level and will cover issues such as explicit memory management, pointers, the compilation process and debugging. The course will involve several programming projects which will provide students with the experience they need to program effectively in these languages. This course assumes programming experience equivalent to CIS 110, CIS 120 or ESE 112.",
    "course_id" : "CIS 190",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "190",
    "course_title" : "C++ Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "C# is the premier programming language for the .NET framework. Over the last decade, the language has evolved to meet the needs of a variety of programming styles while supporting the ever-growing capabilities of the the .NET runtime and libraries. This course provides a thorough introduction to the C# language and the .NET framework, building on the skills gained in the introductory programming courses (CIS 110, CIS 120, or ESE 112). In addition to providing the student with a solid background in C#, this course also explores topics that the .NET platform exposes such as object oriented design, .NET runtime internals, and others based on class interest. A series of short, weekly homework assignments reinforces the concepts introduced in class and a group-based final project of the students' design allows them to apply their C# knowledge toward a substantial problem.",
    "course_id" : "CIS 193",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "193",
    "course_title" : "C# Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 110",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course examines the architecture and capabilities of modern GPUs. The graphics processing unit (GPU) has grown in power over recent years, to the point where many computations can be performed faster on the GPU than on a traditional CPU. GPUs have also become programmable, allowing them to be used for a diverse set of applications far removed from traditional graphics settings. Topics covered include architectural aspects of modern GPUs, with a special focus on their streaming parallel nature, writing programs on the GPU using high level languages like Cg and BrookGPU, and using the GPU for graphics and general purpose applications in the area of geometry modeling, physical simulation, scientific computing and games. Students are expected to have a basic understanding of computer architecture and graphics, and should be proficient in OpenGL and C/C++. This course is appropriate as an upper-level undergraduate CIS elective.",
    "course_id" : "CIS 565",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "565",
    "course_title" : "GPU Programming and Architectur",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 460 or CIS 560, and familiarity with computer hardware/systems.  The hardware/systems requirement may be met by CIS 501; or CIT 593 and 595; or CIS 240 (with CIS 371 recommended); or equivalent coursework.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 195",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "195",
    "course_title" : "IPhone App Development",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Basic concepts of set theory, relations and functions, properties of relations. Basic concepts of algebra. Grammars, languages, and automata- finite state grammars, regular expressions, context-free and context-sensitive grammars, unrestricted grammars, finite automata, pushdown automata and other related automata, Turing machines, Syntax and semantics of grammar formalisms. Strong generative capacity of grammars, Grammers as deductive systems, parsing as deduction. Relevance of formal gammars to modeling biological sequences. The course will deal with these topics in a very basic and introductory manner--ideas of proofs and not detailed proofs, and more importantly with plenty of linguistic examples to bring out the linguistic relevance of these topics. The course will deal with these topics in a very basic and introductory manner--ideas of proofs and not detailed proofs, and more importantly with plenty of linguistic examples to bring out the linguistic relevance of these topics.",
    "course_id" : "CIS 477",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "477",
    "course_title" : "Mathematical Methods/Techniques for Linguistics and Natural Language Processing",
    "crosslistings" : [ {
      "course_id" : "549",
      "section_id" : "",
      "subject" : "LING"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "05",
    "instructors" : "",
    "prerequisites" : "PHIL 006 or instructor's permission",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Can you check if two large documents are identical by examining a small number of bits? Can you verify that a program has correctly computed a function without ever computing the function? Can students compute the average score on an exam without ever revealing their scores to each other? Can you be convinced of the correctness of an assertion without ever seeing the proof? The answer to all these questions is in the affirmative provided we allow the use of randomization. Over the past few decades, randomization has emerged as a powerful resource in algorithm desgin. This course would focus on powerful general techniques for designing randomized algorithms as well as specific representative applications in various domains, including approximation algorithms, cryptography and number theory, data structure design, online algorithms, and parallel and distributed computation.",
    "course_id" : "CIS 334",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "334",
    "course_title" : "Advanced Topics in Algorithms",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 320",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is about the principles of programmng languages. It studies programming language concepts by implementing a sequence of interpreters, compilers, and type checkers, each one introducing a new language concept. The goal of this course is threefold: By studying the concepts and abstractions of high-level programming languages, students should be able to use them more effectively. Second, by learning how the features of high-level programming languages are implemented, students should be able to program more expressively in low-level languages. Finally, by understanding the principles behind programming language design, students should be able to create, evaluate and compare programming languages.",
    "course_id" : "CIS 340",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "340",
    "course_title" : "Problem Solving and Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "CSE 120, 121",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course introduces principles and practices of computer and network security. We will cover basic concepts, threat models, and the security mindset; an introduction to cryptography and cryptographic protocols including encryption, authentication, message authentication codes, hash functions, public-key cryptography, and secure channels; an introduction to networks and network security including IP, TCP, routing, network protcols, web architecture, attacks, firewalls, and intrusion detection systems; an introduction to software security including defensive programming, memory protection, buffer overflows, and malware; and discuss broader issues and case studies such as privacy, security and the law, digital rights management, denial of service, and ethics.",
    "course_id" : "CIS 331",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "331",
    "course_title" : "Introduction to Networks and Security",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CSE 121 or ESE 115",
    "register_subgroup_one" : "01",
    "register_subgroup_two" : "01",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "One-time course offerings of special interest. Equivalent to CIS seminar course. Offerings to be determined.",
    "course_id" : "CIS 800",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "800",
    "course_title" : "PhD Special Topics",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "You know how to write a \"program\". But how do you create a software \"product\" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; Android application development; software testing; refactoring; and software quality metrics.",
    "course_id" : "CIS 350",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "350",
    "course_title" : "Software Design/Engineering",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Logic has been called the calculus of computer science as it plays a fundamental role in computer science, similar to that played by calculus in the physical sciences and traditional engineering disciplines. Indeed, logic is useful in areas of computer science as disparate as architecture (logic gates), software engineering (specification and verification), programming languages (semantics, logic programming), databases (relational algebra and SQL), artificial intelligence (automatic theorem proving), algorithms (complexity and expressiveness), and theory of computation (general notions of computability). CIS 582 provides students with a thorough introduction to mathematical logic, covering in depth the topics of syntax, semantics, decision procedures, formal proof systems, and soundness and completeness for both propositional and first-order logic. The material is taught from a computer science perspective, with an emphasis on algorithms , computational complexity, and tools. Projects will focus on problems in circuit design, specification and analysis of protocols, and query evaluation in databases.",
    "course_id" : "CIS 582",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "582",
    "course_title" : "Logic in Computer Science",
    "crosslistings" : [ {
      "course_id" : "482",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 160 or CIT 592 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Most people's information about the Past is drawn from coffee table picture books, popular movies, video games, documentaries about discoveries of \"ancient, mysterious, and lost\" civilizations, and tours often lead by guides of limited or even dubious credentials. How are these ideas presented, formed, and circulated? Who creates and selects the information presented in this diverse media? Are these presentations accurate? Do they promote or hurt scientific explanations? Can the artistic, aesthetic, and scientific realms be bridged to effectively promote and interpret the past? How can modern technologies be applied to do a better job at presenting what is difficult to experience firsthand? This class will focus on case studies, critiques, and methods of how archaeology and the past are created, presented and used in movies, museums, games, the internet, and art. Each year, the studio-seminar focuses on a project. In addition to exploring general concepts of archaeology and the media, students will work in teams to produce an interactive, digital media exhibit using the latest modeling visualization programs for presenting the sacred landscape of the Inca capital of Cuzco, Peru. Cuzco is one of the most important UNESCO World Heritage sites and visited by nearly a million tourists a year. Potential class projects include fly-throughs of architectural and landscape renderings, simulations of astronomy and cosmology, modeling of human behavior within architectural and landscape settings, and study artifacts in the Penn Museum.",
    "course_id" : "CIS 106",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "106",
    "course_title" : "Visualizing the Past.",
    "crosslistings" : [ {
      "course_id" : "258",
      "section_id" : "",
      "subject" : "ANTH"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "A",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is an introductory graduate course on computer architecture with an emphasis on a quantitative approach to cost/performance design tradeoffs. The course covers the fundamentals of classical and modern uniprocessor design: performance and cost issues, instruction sets, pipelining, superscalar, out-of-order, and speculative execution mechanisms, caches, physical memory, virtual memory, and I/O. Other topics include: static scheduling, VLIW and EPIC, software speculation, long (SIMD) and short (multimedia) vector execution, multithreading, and an introduction to shared memory multiprocessors.",
    "course_id" : "CIS 501",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "501",
    "course_title" : "Computer Architecture",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Knowledge of computer organization and basic programming skills",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This project-based course is designed to provide a comprehensive introduction to the application of computer graphics in a laboratory setting. Course materials and labs will facilitate understanding issues and trends in 3D computer graphics. Students will develop a facility with fundamental 3-D models and modeling software through a series of projects. The course will offer students a technical understanding of Polygonal and Spline based modeling, alternative and standard methods of 3-D model import and export, and model conversion. It will also cover procedural and scripting methods, techniques, and conventions for creating models and shaders that will function properly for rendering and animation. Practical application of topics covered in CSE 460/560 include; geometric transformations, hierarchies, articulation, modeling, blend shaps, vertex weighting, and animation. Experiments with various animation methods inlcude: dynamics, forward and inverse kinematics, surface deformations, keyframe interpolation, motion capture, procedural animation, and facial animation. The course will be laboratory based and will use industry standard software.",
    "course_id" : "CIS 461",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "461",
    "course_title" : "Computer Modeling and Animation Applications",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CSE 120, 121 or equivalent experience and concurrent or past enrollment in CSE 460/560",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is focused on programming the essential geometric and mathematical concepts underlying modern computer graphics. Using 2D and 3D implementations, it covers fundamental topics on scene graphs, computational geometry, graphics algorithms, and user interface design. Programming languages introduced include C++, OpenGL, FLTK and Python.",
    "course_id" : "CIS 277",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "277",
    "course_title" : "Introduction to Computer Graphics Techniques",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 120",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Introduction to Computer Programming is the first course in our series introducing students to computer science. In this class you will learn the fundamentals of computer programming in Java, with emphasis on applications in science and engineering. You will also learn about the broader field of computer science and algorithmic thinking, the fundamental approach that computer scientists take to solving problems.",
    "course_id" : "CIS 110",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "See the CIS 110 website for information about registration in recitations and permission to register for closed sections of CIS 110.  Counts as a Formal Reasoning course for College students.",
    "course_number" : "110",
    "course_title" : "Introduction to Computer Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "02",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS110. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine. If you have never programmed before, you should take CIS 110 first.",
    "course_id" : "CIS 120",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "This counts as a Formal Reasoning course for College students.",
    "course_number" : "120",
    "course_title" : "Programming Languages and Techniques I",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "02",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This is an introductory course about Basic Algorithms and Data Structures using the Java programming language. We introduce elementary concepts about the complexity of an algorithm and methods for analyzing the running time of software. We describe data structures like stacks, queues, lists, trees, priority queues, maps, hash tables and graphs, and we discuss how to implement them efficiently and how to use them in problems-solving software. A larger project introducing students to some of the challenges of software development concludes the course.",
    "course_id" : "CIS 121",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "121",
    "course_title" : "Programming Languages and Technigues II: Data Structures in Java",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "CIS 120, CIS 160",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Introduction to research being conducted in the department. Mandatory for firstyear doctoral students. Taken as fifth course for no credit at no cost.",
    "course_id" : "CIS 996",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "996",
    "course_title" : "Research Seminar",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 196",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "196",
    "course_title" : "Ruby on Rals Web Develp",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "",
    "terms_offered_description" : ""
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "SEM",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is an introduction to Computational Learning Theory, a field which attempts to provide algorithmic, complexity-theoretic and statistical foundations to modern machine learning. The focus is on opics in computational learning theory for researchers and students in artificial intelligence, neural networks, theoretical computer science, and statistics.",
    "course_id" : "CIS 625",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "625",
    "course_title" : "Computational Learning Theory",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Prior courses in algorithms, complexity and statistics would be helpful but are not necessary.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "You know how to program, but do you know how to implement a programming language? In CIS341 you'll learn how to build a compiler. Topics covered include: lexical analysis, grammars and parsing, intermediate representations, syntax-directed translation, code generation, type checking, simple dataflow and control-flow analyses, and optimizations. Along the way, we study objects and inheritance, first-class functions (closures), data representation and runtime-support issues such as garbage collection. This is a challenging, implementation-oriented course in which students build a full compiler from a simple, typed object-oriented language to fully operational x86 assembly. The course projects are implemented using OCaml, but no knowledge of OCaml is assumed.",
    "course_id" : "CIS 341",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "341",
    "course_title" : "Compilers and Interpreters",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "Two semesters of programming courses, e.g., CIS 120-121, and CIS 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This is an introduction to topics in the security of computer systems and communication on networks of computers. The course covers four major areas: fundamentals of cryptography, security for communication protocols, security for operating systems and mobile programs, and security for electronic commerce. Sample specific topics include: passwords and offline attacks, DES, RSA, DSA, SHA, SSL, CBC, IPSec, SET, DDoS attacks, biometric authentication, PKI, smart cards, S/MIME, privacy on the Web, viruses, security models, wireless security, and sandboxing. Students will be expected to display knowledge of both theory and practice through written examinations and programming assignments.",
    "course_id" : "CIS 551",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "551",
    "course_title" : "Computer and Network Security.",
    "crosslistings" : [ {
      "course_id" : "551",
      "section_id" : "",
      "subject" : "TCOM"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "TCOM 512 or equivalent required; CIS 500 recommended.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 450",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "450",
    "course_title" : "Database & Info Systems",
    "crosslistings" : [ {
      "course_id" : "550",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course develops students problem solving skills using techniques that they have learned during their CS training. Over the course of the semester, students work on group projects in which they use programming techniques to solve open-ended problems, e.g. optimization, simulation, etc. There are no \"correct\" answers to these problems; rather, the focus is on the four steps of the problem solving process: algorithmic thinking; programming; analysis; and communication.",
    "course_id" : "CIS 559",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "559",
    "course_title" : "Programming and Problem Solving",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Proficiency in Java.  CIS 320 or CIS 502, or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.",
    "course_id" : "CIS 419",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "419",
    "course_title" : "Introducation to Machine Learning",
    "crosslistings" : [ {
      "course_id" : "519",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.",
    "course_id" : "CIS 519",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "519",
    "course_title" : "Introduction to Machine Learning",
    "crosslistings" : [ {
      "course_id" : "419",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "An introduction to the problems of computer vision and other forms of machine perception that can be solved using geometrical approaches rather than statistical methods. Emphasis will be placed on both analytical and computational techniques. This course is designed to provide students with an exposure to the fundamental mathematical and algorithmic techniques that are used to tackle challenging image based modeling problems. The subject matter of this course finds application in the fields of Computer Vision, Computer Graphics and Robotics. Some of the topics to be covered include: Projective Geometry, Camera Calibration, Image Formation, Projective, Affine and Euclidean Transformations, Computational Stereopsis, and the recovery of 3D structure from multiple 2D images. This course will also explore various approaches to object recognition that make use of geometric techniques, these would include alignment based methods and techniques that exploit geometric invariants. In the assignments for this course, students will be able to apply the techniques to actual computer vision problems. This course is appropriate as an upper-level undergraduate CIS elective.",
    "course_id" : "CIS 580",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "580",
    "course_title" : "Machine Perception",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "A solid grasp of the fundamentals of linear algebra.  Some knowledge of programming in C and/or Matlab",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Introduction to database management systems and principles of design. The Entity-Relationship model as a modeling tool. The relational model: formal languages, the industry standard SQL, relational design theory, query optimization. Storing and querying XML data. Recursive queries, Views and data integration. Overview of system level issues: physical data organizaiton, indexing techniques, and transactions. Connecting databases to the Web. Course work requires programming in several different query languages, several written homeworks and a team project.",
    "course_id" : "CIS 330",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "330",
    "course_title" : "Design Principles of Information Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "05",
    "instructors" : "",
    "prerequisites" : "CIS 121 and 160",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is focused on cyber physical systems with emphasis on real-time issues. Cyber physical systems are integrations of computation and communication with physical processes. Embedded computers monitor and control physical processes in real-time. As these embedded computer transformed from word processors to global communications devices for information gathering and sharing, embedded computers will change from small self-contained systems to cyber-physical systems by sensing, The course is to study principles, methods, and techniques for building high-assurance cyber-physical systems. Topics will include requirements capture and modeling, mental models, assurance cases, hazard analysis, real-time programming and communication, real-time scheduling and virtual machines, feedback control in computer systems, verification and validseries of projects that will implement safety-critical embedded systems (e.g., pacemaker, infusion pump).",
    "course_id" : "CIS 441",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "441",
    "course_title" : "Embedded Software for Life-Critical Applications",
    "crosslistings" : [ {
      "course_id" : "541",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 240 or equivalent; ESE 350 recommended",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "How do minds work? This course surveys a wide range of answers to this question from disciplines ranging from philosophy to neuroscience. The course devotes special attention to the use of simple computational and mathematical models. Topics include perception, learning, memory, decision making, emotion and consciousness.",
    "course_id" : "CIS 140",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "This counts as a Formal Reasoning course for College students.",
    "course_number" : "140",
    "course_title" : "Introduction to Cognitive Science",
    "crosslistings" : [ {
      "course_id" : "001",
      "section_id" : "",
      "subject" : "COGS"
    }, {
      "course_id" : "105",
      "section_id" : "",
      "subject" : "LING"
    }, {
      "course_id" : "044",
      "section_id" : "",
      "subject" : "PHIL"
    }, {
      "course_id" : "140",
      "section_id" : "",
      "subject" : "PPE"
    }, {
      "course_id" : "207",
      "section_id" : "",
      "subject" : "PSYC"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primative machine instructions, and finishes with an introduction to all aspects of computer systems architecture and serves as the foundation for subsequent computer systems courses, such as Digital Systems Organization and Design (CIS 371), Computer Operating Systems (CIS 380), and Compilers and Interpreters (CIS 341). The course will consider the SPARC architecture, boolean logic, number systems,and computer arithmetic; macro assembly language programming and subroutine linkages; the operating system interface and input/output; understanding the output of the C compiler; the use of the C programming language to generate specific assembly language instructions.",
    "course_id" : "CIS 240",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "240",
    "course_title" : "Introduction to Computer Architecture",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "CIS 110 or equivalent experience",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This is the second computer oganization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization.",
    "course_id" : "CIS 371",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "371",
    "course_title" : "Computer Organization and Design",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "CIS 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course surveys methods and algorithms used in modern operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communication; concurrent/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evalaution.",
    "course_id" : "CIS 380",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "380",
    "course_title" : "Computer Operating Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "03",
    "instructors" : "",
    "prerequisites" : "CIS 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LAB",
      "credit" : ".5"
    } ],
    "corequisites" : "CSE 380",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is a semester long project to design and implement your own operating system. Typical components include a process management system, a commond interpreter, and a file management system.",
    "course_id" : "CIS 381",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "381",
    "course_title" : "Computer Operating System Lab",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The rapidly evolving field of robotics includes systems designed to replace, assist, or even entertain humans in a wide variety of tasks. Recent examples include planetary rovers, robotic pets, medical surgical-assistive devices, and semi-autonomous search-and-rescue vehicles. This introductory-level course presents the fundamental kinematic, dynamic, and computational principles underlying most modern robotic systems. The main topics of the course include: coordinate transformations, manipulator kinematics, mobile-robot kinematics, actuation and sensing, feedback control, vision, motion planning, and learning. The material is reinforced with hands-on lab exercises including basic robot-arm control and the programming of vision-guided mobile robots.",
    "course_id" : "CIS 390",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "390",
    "course_title" : "Machine Perception",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "05",
    "instructors" : "",
    "prerequisites" : "MATH 240, PHYS 150 or MEAM 110/147",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Artificial Intelligence is considered from the point of view of a resource-limi knowledge-based agent who must reason and act in the world. Topics include log automatic theorem proving, search, knowledge representation and reasoning, natural language processing, probabilistic reasoning, and machine learning. Programming assignments in Python.",
    "course_id" : "CIS 391",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "391",
    "course_title" : "Introduction to Artificial Intelligence",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "05",
    "instructors" : "",
    "prerequisites" : "CIS 121 and CIS 262",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The purpose of this course is to introduce undergraduate students in computer computer science and engineering to quantum computers (QC) and quantum information science (QIS). This course is meant primarly for juniors and seniors in Computer Science. No prior knowledge of quantum mechanics (QM) is assumed. Enrollment is by permission of the instructor.",
    "course_id" : "CIS 398",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "398",
    "course_title" : "Quantum Computer and Information Science",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 260, 262 and Math 240",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Visit the CIS department website for descriptions of available Special Topics classes.",
    "course_id" : "CIS 399",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "See the CIS department website for descriptions of available Special Topics classes",
    "course_number" : "399",
    "course_title" : "Special Topics",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "01",
    "register_subgroup_two" : "01",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The goal of the senior design coruse is to provide students with an opportunity to define, design and execute a significant project. Project subjects may revolve around software, hardware or computational theory. Students must have an abstract of their Senior Project, which is approved and signed by a Project Advisor early in the Fall semester. The project is expected to span two semesters; students must enroll in CIS 401 during the second semester. At the end of the first semester, students are required to submit an intermediate report and give a presentation describing their project and progress. Grades are based on technical writing skills (as per submited report) presentation skills and progress on the project. These are evaluated by the Project Adviser and the Course Instructor.",
    "course_id" : "CIS 400",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "400",
    "course_title" : "Senior Project",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "06",
    "instructors" : "",
    "prerequisites" : "Senior standing or permission of instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "A",
    "terms_offered_description" : "Course usually offered in fall term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Continuation of CIS 400. Design and implementation of a significant piece of work: software, hardware or theory. Students are required to submit a final written report and give a final presentation and demonstration of their project. Grades are based on the report, the presentation and the satisfactory completion of the project. These are evaluated by the Project Adviser and the Course Instructor.",
    "course_id" : "CIS 401",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "401",
    "course_title" : "Senior Project",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "06",
    "instructors" : "",
    "prerequisites" : "CIS 400, senior standing or permission of instructor",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "B",
    "terms_offered_description" : "Course usually offered in spring term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "The course introduces mathematical and algorithmic techniques for geometric modeling with applications to computer graphics and computer animation. The course covers implicit and parametric curves; implicit and parametric surfaces; polygonal surfaces; polygonal surface simplification, decomposition, and parametrization; and surface reconstruction from point sets.",
    "course_id" : "CIS 410",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "410",
    "course_title" : "Curves and Surfaces: Theory and Applications",
    "crosslistings" : [ {
      "course_id" : "510",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is a pragmatic introduction to parallel and distributed programming. It targets science and engineering students with basic programming skills, and prepares them for parallelizing existing sequential programs or optimizing the perfomrance of existing parallel codes. The course teaches how to program with widely used parallel programming interfaces such as Pthread, MPI, OpenMP, HPFaand RMI. In addition, the course covers enough information on common parallel architectures, so that the students can optimize the programs for different platforms.",
    "course_id" : "CIS 434",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "434",
    "course_title" : "Introduction to Parallel Processing",
    "crosslistings" : [ {
      "course_id" : "534",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "",
    "course_id" : "CIS 452",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "452",
    "course_title" : "Data Mgmt/Mobile Comput",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how \"cloud computing\" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Googe-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course you will learn about some aspects of large-scale software development assimilating large APIs.",
    "course_id" : "CIS 455",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "455",
    "course_title" : "Internet and Web Systems",
    "crosslistings" : [ {
      "course_id" : "555",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Familiarity with threads and concurrency, strong Java programming skills.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course covers core subject matter common to the fields of robotics, character animation and embodied intelligent agents. The intent of the course is to provide the student with a solid technical foundation for developing, animating and controlling articulated systems used in interactive computer game virtual reality simulations and high-end animation applications. The course balances theory with practice by \"looking under the hood\" of current animation systems and authoring tools and exams the technologies and techniques used from both a computer science and engineering perspective. Topics covered include: geometric coordinate systems and transformations; quaternions; parametric curves and surfaces; forward and inverse kinematics; dynamic systems and control; computer simulation; keyframe, motion capture and procedural animation; behavior-based animation and control; facial animation; smart characters and intelligent agents.",
    "course_id" : "CIS 462",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "462",
    "course_title" : "Computer Animation",
    "crosslistings" : [ {
      "course_id" : "562",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "Previous exposure to major concepts in linear algebra (i.e. vector matrix math), curves and surfaces, dynamical systems (e.g.  2nd order mass-spring-damper systems) and 3D computer graphics has also been assumed in the preparation of the course materials.",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Ever increasing availability of inexpensive processors connected by a communication network has motivated the development of numerous concepts and paradigms for distributed real-time embedded systems. The primary objectives of this course are to study the principles and concepts of real-time embedded computing and to provide students hands-on experience in developing embedded applications. This course covers the concepts and theory necessary to understand and program embedded real-time systems. This includes concepts and theory for real-time system design, analysis, and certification; programming and operating systems for embedded systems; and concepts, technologies, and protocols for distributed embedded real-time systems. The course will cover a variety of existing systems and technologies, e.g., real- machines, architectural description anguage, formal meth and logical-time programming paradigms, and certification The course requires active student participation in-group projects. Each group will be responsible for the design and implementation of a life-critical embedded system such as a pacemaker. The group projects are intended to complement the learning of principles and concepts through the application of theory in practice and the development of experimental skills in building embedded applications.",
    "course_id" : "CIS 480",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "480",
    "course_title" : "Real-Time and Embedded Systems",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 380, some network programming experience is desirable",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "M",
    "terms_offered_description" : "Course not offered every year"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Logic has been called the calculus of computer science as it plays a fundamental role in computer science, similar to that played by calculus in the physical sciences and traditional engineerng disciplines. Indeed, logic is useful in areas of computer science as disparate as architecture (logic gates), software engineerng (specification and verification), programming languages (semantics, logic programming), databases (relational algebra and SQL), artificial intelligence (automatic theorem proving), algorithms (complexity and expressiveness), and theory of computation (general notions of computability). CIS 482 provides the students with a thorough introduction to mathematical logic, covering in depth the topics of syntax, semantics, decision procedures, formal proof systems, and soundness and completeness for both propositional and first-order logic. The material is taught froma computer science perspective, with an emphasis on algorithms, computational complexity, and tools. Projects will focus on problems in circuit design, specification and analysis and protocols, and query evaluation in databases.",
    "course_id" : "CIS 482",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "482",
    "course_title" : "Logic In Computer Science",
    "crosslistings" : [ {
      "course_id" : "582",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 160",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Unix, in its many forms, runs much of the world's computer infrastructure, from cable modems and cell phones to the giant clusters that power Google and Amazon. This half-credit course provides a thorough introduction to Unix and Linux. Topics will range from critical basic skills such as examin and editing files, compiling programs and writing shell scripts, to higher level topics such as the architecture of Unix and its programming model. The material learned is applicable to many classes, including CIS 240, CIS 331, CIS 341, CIS 371, and CIS 380.",
    "course_id" : "CIS 191",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "191",
    "course_title" : "Using and Understanding Unix and Linux",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 110 or equivalent",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : ".5"
    }, {
      "activity_code" : "REC",
      "credit" : "0"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "Python is an elegant, concise, and powerful language that is useful for tasks large and small. Python has quickly become a popular language for getting things done efficiently in many in all domains: scripting, systems programming, research tools, and web development. This course will provide an introduction to this modern high-level language using hands-on experience through programming assignments and a collaborative final application development project.",
    "course_id" : "CIS 192",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "192",
    "course_title" : "Python Programming",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 120 or ESE 112",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course is focused on cyber physical systems with emphasis on real-time issues. Cyber physical systems are integrations of computation and communication with physical processes. Embedded computers monitor and control physical processes in real-time. As these embedded computer transformed from word processors to global communications devices for information gathering and sharing, embedded computers will change from small self-contained systems to cyber-physical systems by sensing, The course is to study principles, methods, and techniques for building high-assurance cyber-physical systems. Topics will include requirements capture and modeling, mental models, assurance cases, hazard analysis, real-time programming and communication, real-time scheduling and virtual machines, feedback control in computer systems, verification and validseries of projects that will implement safety-critical embedded systems (e.g., pacemaker, infusion pump).",
    "course_id" : "CIS 541",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "541",
    "course_title" : "Embedded Software for Life-Critical Applications",
    "crosslistings" : [ {
      "course_id" : "441",
      "section_id" : "",
      "subject" : "CIS"
    } ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 240 or equivalent, ESE 350 is recommended",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "H",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  }, {
    "activities_and_credits" : [ {
      "activity_code" : "LEC",
      "credit" : "1"
    } ],
    "corequisites" : "",
    "course_credit_connector" : "F",
    "course_credit_type" : "CU",
    "course_description" : "This course will teach the fundamentals of Human-Computer Interaction (theory, design, implementation, experimentation, evaluation) in the context of current web interaction mechanisms, technologies, and applications. The course content will emphasize and leverage open source technologies to design, prototype, implement, and test user-interfaces and functionality in the context of today's most intriguing web trend, social networking.",
    "course_id" : "CIS 368",
    "course_level" : "",
    "course_level_description" : "",
    "course_notes" : "",
    "course_number" : "368",
    "course_title" : "User Interfaces and the Web",
    "crosslistings" : [ ],
    "department" : "CIS ",
    "department_of_record" : "CIS",
    "distribution_requirement" : "",
    "eas_credit_factor_code" : "",
    "instructors" : "",
    "prerequisites" : "CIS 110, CIS 120, CIS 121, CIS 277",
    "register_subgroup_one" : "",
    "register_subgroup_two" : "",
    "requirements_met" : [ ],
    "scheduling_priority" : "C",
    "school_code" : "EG",
    "terms_offered_code" : "C",
    "terms_offered_description" : "One-term course offered either term"
  } ],
  "service_meta" : {
    "current_page_number" : 1,
    "error_text" : "",
    "next_page_number" : 1,
    "number_of_pages" : 1,
    "previous_page_number" : 1,
    "results_per_page" : 999
  }
}
